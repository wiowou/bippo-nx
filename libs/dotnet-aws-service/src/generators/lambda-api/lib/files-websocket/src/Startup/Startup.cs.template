namespace <%= projectNamePascal %>;
using <%= projectNamePascal %>.Service;
using <%= projectNamePascal %>.Setting;

public partial class Startup
{
  public IConfiguration Configuration { get; }
  private AppSettings _appSettings;

  public Startup(IConfiguration configuration)
  {
    Configuration = configuration;
    _appSettings = new AppSettings();
    configuration.Bind(_appSettings);
  }

  // This method gets called by the runtime. Use it to add services
  public void ConfigureServices(IServiceCollection services)
  {
    services.AddSingleton<IAppSettings<%= projectNamePascal %>>(_appSettings);
    ConfigureDatabase(services);
    services.AddScoped<IHotelService, HotelService>();
    ConfigureControllers(services);
    ConfigureSwagger(services);
    ConfigureDatabase(services);
    services.AddLogging();
    
<% if (gatewayType === "rest") { %>
    services.AddAWSLambdaHosting(LambdaEventSource.RestApi);
<% } else { %>
    services.AddAWSLambdaHosting(LambdaEventSource.HttpApi);
<% } %>
  }


  public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
  {
    // Configure the HTTP request pipeline.
    if (_appSettings.EnvType != "prod")
    {
      app.UseSwagger();
      app.UseSwaggerUI();
    }

    app.UseHttpsRedirection();
    app.UseRouting();
    app.UseAuthorization();

    app.UseEndpoints(endpoints => {
      endpoints.MapControllers();
    });
  }
}