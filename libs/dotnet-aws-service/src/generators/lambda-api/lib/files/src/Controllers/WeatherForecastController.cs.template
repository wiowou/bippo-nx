using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Mvc;

using <%= projectNamePascal %>.Database;

namespace ApiHandler.Controllers;

[ApiController]
[Route("[controller]")]
public class WeatherForecastController : ControllerBase
{
  private static readonly string[] Summaries = new[]
  {
    "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"
  };

  private readonly ILogger<WeatherForecastController> _logger;
  private readonly <%= projectNamePascal %>DbContext _context;

  public WeatherForecastController(ILogger<WeatherForecastController> logger, <%= projectNamePascal %>DbContext context)
  {
    _logger = logger;
    _context = context;
  }

  [HttpGet("forecast")]
  public IEnumerable<WeatherForecast> Get()
  {
    Console.WriteLine("getting weather forecast");
    return Enumerable.Range(1, 5).Select(index => new WeatherForecast
    {
      //Date = DateOnly.FromDateTime(DateTime.Now.AddDays(index)),
      Date = DateTime.Now.AddDays(index),
      TemperatureC = Random.Shared.Next(-20, 55),
      Summary = Summaries[Random.Shared.Next(Summaries.Length)]
    })
    .ToArray();
  }

  [HttpGet("hotels")]
  public async Task<ActionResult<IEnumerable<Hotel>>> GetHotels()
  {
    if (_context.Hotels == null)
    {
      return NotFound();
    }
    var hotels = await _context.Hotels.ToListAsync();
    return Ok(hotels);
  }
}
