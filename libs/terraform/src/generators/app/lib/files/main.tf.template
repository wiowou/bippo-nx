<% if (appType === "SHARED_INFRA") { %>
## shared infra
module "user-pool" {
  # source = "git@github.com:myuser/terraform-modules.git//cognito"
  # source = "git::https://github.com/myuser/terraform-modules//cognito"
  # source = "<%= rootOffset %>libs/terraform/cognito"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir

  # providers = {
  #   aws = aws.us-east-2
  # }
}

module "vpc" {
  # source = "git@github.com:myuser/terraform-modules.git//vpc"
  # source = "<%= rootOffset %>libs/terraform/vpc"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "STEP_FUNCTION") { %>
## step function
module "step-function" {
  # source = "git@github.com:myuser/terraform-modules.git//step-function"
  # source = "git::https://github.com/myuser/terraform-modules//step-function"
  # source = "<%= rootOffset %>libs/terraform/step-function"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR

  # providers = {
  #   aws = aws.us-east-2
  # }
}

data "aws_lambda_function" "state0" {
  function_name = "${var.project_name}-<%= parentProjectName %>-state0-${var.ENVIRONMENT}"
}
<% } else if (appType === "LAMBDA") { %>
## lambda
module "lambda" {
  # source = "git@github.com:myuser/terraform-modules.git//lambda"
  # source = "git::https://github.com/myuser/terraform-modules//lambda"
  # source = "<%= rootOffset %>libs/terraform/lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "UTILLAMBDA") { %>
## lambda
module "lambda" {
  # source = "git@github.com:myuser/terraform-modules.git//lambda"
  # source = "git::https://github.com/myuser/terraform-modules//lambda"
  # source = "<%= rootOffset %>libs/terraform/lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  subnet_ids = null
  security_group_ids = null
  runtime = "python3.12"

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "LAMBDA_SERVICE") { %>
## lambda service

module "lambda-service" {
  # source = "git@github.com:myuser/terraform-modules.git//api-gateway-http-lambda"
  # source = "git::https://github.com/myuser/terraform-modules//api-gateway-http-lambda"
  # source = "<%= rootOffset %>libs/terraform/api-gateway-http-lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  use_auth = true

  # environment_settings = {
  #   APP_TABLE_NAME = module.dynamodb.app_table_name
  # }

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "LAMBDA_SERVICE_REST") { %>
## lambda service

module "lambda-service" {
  # source = "git@github.com:myuser/terraform-modules.git//api-gateway-rest-lambda"
  # source = "git::https://github.com/myuser/terraform-modules//api-gateway-rest-lambda"
  # source = "<%= rootOffset %>libs/terraform/api-gateway-rest-lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  use_auth = false
  endpoint_configuration = "PRIVATE"

  # environment_settings = {
  #   APP_TABLE_NAME = module.dynamodb.app_table_name
  # }

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } %>

<% if (database === "dynamo") { %>
module "dynamodb" {
  source = "./dynamodb"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } %>