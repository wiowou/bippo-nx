## alternate source patterns
# source = "git::https://github.com/myuser/terraform-modules//mymodule"
# source = "<%= rootOffset %>libs/terraform/mymodule"

<% if (appType === "SHARED_INFRA") { %>
## shared infra
module "user-pool" {
  # source = "git@github.com:myuser/terraform-modules.git//cognito"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir

  # providers = {
  #   aws = aws.us-east-2
  # }
}

module "vpc" {
  # source = "git@github.com:myuser/terraform-modules.git//vpc"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "STEP_FUNCTION") { %>
## step function
module "step-function" {
  # source = "git@github.com:myuser/terraform-modules.git//step-function"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR

  # providers = {
  #   aws = aws.us-east-2
  # }
}

data "aws_lambda_function" "state0" {
  function_name = "${var.project_name}-<%= parentProjectName %>-state0-${var.ENVIRONMENT}"
}
<% } else if (appType === "LAMBDA") { %>
## lambda
module "lambda" {
  # source = "git@github.com:myuser/terraform-modules.git//lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  <% if (runtime !== "") { %>
  runtime = "<%= runtime %>"
  <% } %>

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "UTILLAMBDA") { %>
## lambda
module "lambda" {
  # source = "git@github.com:myuser/terraform-modules.git//lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  subnet_ids = null
  security_group_ids = null
  <% if (runtime !== "") { %>
  runtime = "<%= runtime %>"
  <% } else { %>
  runtime = "python3.12"
  <% } %>

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "LAMBDA_SERVICE") { %>
## lambda service

module "lambda-service" {
  # source = "git@github.com:myuser/terraform-modules.git//api-gateway-http-lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  <% if (runtime !== "") { %>
  runtime = "<%= runtime %>"
  <% } %>
  use_auth = true

  # environment_settings = {
  #   APP_TABLE_NAME = module.dynamodb.app_table_name
  # }

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } else if (appType === "LAMBDA_SERVICE_WEBSOCKET") { %>
## lambda service

module "lambda-service" {
  # source = "git@github.com:myuser/terraform-modules.git//api-gateway-websocket-lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  routes = ["$connect", "$disconnect", "$default"]
  <% if (runtime !== "") { %>
  runtime = "<%= runtime %>"
  <% } %>
  use_auth = true

  # environment_settings = {
  #   APP_TABLE_NAME = module.dynamodb.app_table_name
  # }

  # providers = {
  #   aws = aws.us-east-2
  # }
}

resource "aws_dynamodb_table" "ws" {
  name           = module.lambda-service.dynamodb_table_name
  billing_mode   = "PAY_PER_REQUEST" # "PROVISIONED"
  read_capacity  = null # only specify if using PROVISIONED
  write_capacity = null # only specify if using PROVISIONED
  hash_key       = "ConnectionId"

  attribute {
    name = "ConnectionId" # this key name is used in the connect/disconnect lambdas
    type = "S"
  }

#   ttl {
#     attribute_name = "TimeToExist"
#     enabled        = true
#   }
}

<% } else if (appType === "LAMBDA_SERVICE_REST") { %>
## lambda service

module "lambda-service" {
  # source = "git@github.com:myuser/terraform-modules.git//api-gateway-rest-lambda"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir
  BUILD_SOURCES_DIR = var.BUILD_SOURCES_DIR
  handler = "<%= handler %>"
  use_auth = false
  endpoint_configuration = "PRIVATE"
  <% if (runtime !== "") { %>
  runtime = "<%= runtime %>"
  <% } %>

  # environment_settings = {
  #   APP_TABLE_NAME = module.dynamodb.app_table_name
  # }

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } %>

<% if (database === "dynamo") { %>
module "dynamodb" {
  source = "./dynamodb"

  environment = var.ENVIRONMENT
  env_type    = var.ENV_TYPE
  project_name = var.project_name
  application_dir = var.application_dir

  # providers = {
  #   aws = aws.us-east-2
  # }
}
<% } %>