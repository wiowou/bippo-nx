{
  "name": "util",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/util/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "@nx/js:tsc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/libs/util",
        "main": "libs/util/src/index.ts",
        "tsConfig": "libs/util/tsconfig.lib.json",
        "assets": [
          "libs/util/*.md",
          {
            "input": "./libs/util/src",
            "glob": "**/!(*.ts)",
            "output": "./src"
          },
          {
            "input": "./libs/util/src",
            "glob": "**/*.d.ts",
            "output": "./src"
          },
          {
            "input": "./libs/util",
            "glob": "generators.json",
            "output": "."
          },
          {
            "input": "./libs/util",
            "glob": "executors.json",
            "output": "."
          }
        ]
      }
    },
    "publish": {
      "command": "node tools/scripts/publish.mjs dotnet-workspace --tag {args.tag}",
      "dependsOn": ["build"]
    },
    "npm-major": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "cwd": "./libs/dotnet-workspace",
        "commands": ["npm version major"]
      }
    },
    "npm-minor": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "cwd": "./libs/dotnet-workspace",
        "commands": ["npm version minor"]
      }
    },
    "npm-patch": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "cwd": "./libs/dotnet-workspace",
        "commands": ["npm version patch"]
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["libs/util/**/*.ts", "libs/util/package.json", "libs/util/executors.json"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "libs/util/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    }
  },
  "tags": []
}
